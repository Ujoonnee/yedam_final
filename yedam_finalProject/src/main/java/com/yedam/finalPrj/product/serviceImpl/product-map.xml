<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yedam.finalPrj.product.serviceImpl.ProductMapper">
	
	
<!-- 	Park -->
	 <resultMap type="com.yedam.finalPrj.product.vo.park.Product" id="product">
		<id property="prodNo" column="PROD_NO" />
		<result property="storeNo" column="STORE_NO" />
		<result property="prodName" column="PROD_NAME" />
		<result property="stock" column="STOCK" />
		<result property="status" column="STATUS" />
		<result property="price" column="PRICE" />
		<result property="prodThumbnail" column="PROD_THUMBNAIL" />
		<result property="prodCat" column="PROD_Cat" />
	</resultMap>
	
	<!-- 매장 입장(상품출력) -->
	<select id = "selectOne" resultType="com.yedam.finalPrj.product.vo.park.Product"  >
		SELECT * 
		FROM
			 (SELECT a.*, ROWNUM rn
			 FROM(
			 	select p.prod_no, p.store_no,p.prod_name,p.stock,p.status,p.price,p.prod_thumbnail
				from product p, store s 
				where s.store_no = p.store_no
				and s.store_no like #{storeNo} 
				) a where ROWNUM<![CDATA[ <=]]> 
				#{pageNum} * #{amount} 
				) b
			where rn > (#{pageNum}-1) * #{amount}
	</select>
<!-- 	썸네일 등록 -->
	<update id="thumbnailUpdate" parameterType="com.yedam.finalPrj.product.vo.park.Product" >
		UPDATE PRODUCT 
		SET PROD_THUMBNAIL =#{prodThumbnail} 
		WHERE PROD_NO =#{prodNo}
	</update>
<!-- 	상품 썸네일 삭제 -->
	<update id = "productThumbnailDelete"  parameterType="com.yedam.finalPrj.product.vo.park.Product" >
		UPDATE PRODUCT SET PROD_THUMBNAIL = ''
		WHERE PROD_NO = #{prodNo}
	</update>
<!-- 	상품 리스트 출력 (가격 검색) -->
	<select id = "searchPrice" resultType="com.yedam.finalPrj.product.vo.park.Product">
		SELECT * 
		FROM
		 (SELECT a.*, ROWNUM rn
		 FROM( select 
		     * from (
		            select p.prod_no, p.store_no,p.prod_name,p.stock,p.status,p.price
		            from product p, store s 
		            where s.store_no = p.store_no
		            and s.store_no like #{storeNo}
		            )where price between #{lowPrice} and #{highPrice})
		            a where ROWNUM<![CDATA[ <=]]> 
				#{pageNum} * #{amount} 
				) b
			where rn > (#{pageNum}-1) * #{amount}
	</select>
<!-- 	상품 리스트 출력(상품명) -->
	<select id="searchProduct" resultType="com.yedam.finalPrj.product.vo.park.Product">
		SELECT * 
		FROM
		 (SELECT a.*, ROWNUM rn
		 FROM( select 
		     * from (
		            select p.prod_no, p.store_no,p.prod_name,p.stock,p.status,p.price
		            from product p, store s 
		            where s.store_no = p.store_no
		            and s.store_no like  #{storeNo} 
		            )where prod_name like ('%'||#{keyword}||'%')
		            )a 
		            where ROWNUM<![CDATA[ <=]]> 
				#{pageNum} * #{amount} 
				) b
			where rn > (#{pageNum}-1) * #{amount}
		</select>
<!-- 	상품갯수 -->
	<select id = "productCnt" resultType="int">
		select count(*)
		from product p
		where store_no like #{storeNo}
		and store_no > 0
	</select>
	<!-- 	상품갯수(상품명) -->
	<select id = "searchProductCnt" resultType="com.yedam.finalPrj.product.vo.park.Product">
		SELECT COUNT(*) 
	    FROM (SELECT *
			FROM PRODUCT p
			WHERE STORE_NO LIKE #{storeNo}
			AND STORE_NO > 0)
	    where prod_name like ('%'||#{keyword}||'%')
	</select>
	<!-- 	상품갯수(가격) -->
	<select id = "searchPriceCnt" resultType="com.yedam.finalPrj.product.vo.park.Product">
		SELECT COUNT(*) 
	    FROM (SELECT *
			FROM PRODUCT p
			WHERE STORE_NO LIKE #{storeNo}
			AND STORE_NO > 0)
	    where price between #{lowPrice} and #{highPrice}
	</select>
	
	<select id = "getStoreNo" resultType= "int">
		select store_no 
		from store
		where mem_no = #{memNo}
	</select>
	<select id = "myStoreProductManegement" resultType="com.yedam.finalPrj.product.vo.park.Product">
	    select p.*,GET_CODE_NAME(status) status_name  
	    from product p
	    where store_no = #{storeNo}
	    and status = '00601' or status = '00602'
	    	 
	    	 
	</select>
	
	<select id = "myStoreProductCnt" resultType="int">
	select count(*) 
	from product
        where store_no = #{storeNo}
	</select>
	<insert id="oneProductInsert" parameterType="com.yedam.finalPrj.product.vo.park.Product">
		<selectKey keyProperty="prodNo" resultType="long"
		order="BEFORE">
			Select CASE when max(prod_no) is null then 1
				   ELSE MAX(prod_no) +1
			       END
			from product
		</selectKey>
		insert into product values(#{prodNo},#{storeNo},#{prodName},#{stock},#{price},'',#{prodCat},'00601')	
	</insert>
	<insert id = "myStoreProductInsert" parameterType="com.yedam.finalPrj.product.vo.park.Product">
		<selectKey keyProperty="prodNo" resultType="long"
		order="BEFORE">
			Select CASE when max(prod_no) is null then 1
				   ELSE MAX(prod_no) +1
			       END
			from product
		</selectKey>
			insert into product values(#{prodNo},#{storeNo},#{prodName},#{stock},#{status},#{price},'',#{prodCat})	
	</insert>
	
	
	<update id = "myStoreProductUpdate" parameterType="java.util.HashMap">
		UPDATE PRODUCT
		SET status = #{status} , stock= #{stock}
		WHERE PROD_NO = #{prodNo}
	</update>
	
	<select id ="salesbyDate" resultType="com.yedam.finalPrj.store.vo.park.ProductReservation">
		SELECT*
		FROM
		    ( SELECT pickup_date, SUM(payment_amt) AS payment_amt, store_no
		        FROM
		            (SELECT *
	                 FROM  product_reservation
	                 WHERE store_no = #{storeNo}
	                 )
		        GROUP BY pickup_date, store_no
		    )
       where pickup_date between sysdate-30 and sysdate
	   ORDER BY pickup_date
	</select>
	
	<select id="searchDateInStatistics" resultType="com.yedam.finalPrj.store.vo.park.ProductReservation">
		SELECT pickup_date, SUM(payment_amt) AS payment_amt , store_no
		from product_reservation
		where store_no=#{storeNo}
		AND pickup_date BETWEEN to_date(#{startDate},'yyMMdd') AND  to_date(#{endDate},'yyMMdd')
		group by pickup_date,store_no
		order by pickup_date
	</select>
<!-- 		Hong -->

	<!-- 상품 예약 목록 -->
	<select id="proReSelectAll" resultType="com.yedam.finalPrj.product.vo.park.hong.ProductReservationVO">
		SELECT r.prod_res_no, m.name, r.pickup_time, r.payment_status, m.mem_type
		FROM member m , product_reservation r
		WHERE m.mem_no = r.mem_no
	</select>

	<!-- 상품예약상세 -->
	<select id="proReDetail" resultType="com.yedam.finalPrj.product.vo.park.hong.ProductReservationVO">
		SELECT r.prod_res_no , m.name, m.tel, r.pickup_time
		FROM member m, product_reservation r
		WHERE m.mem_no = r.mem_no
		AND r.prod_res_no = #{prodResNo}
	</select>
	
	<select id="proReDetailList" resultType="com.yedam.finalPrj.product.vo.park.hong.ProductReservationVO">
		SELECT p.prod_thumbnail, p.prod_name, p.price, rd.count, (p.price * rd.count) AS payment
		FROM product p , reserved_product rd
		WHERE rd.prod_no = p.prod_no
		AND rd.prod_res_no = #{prodResNo}
	</select>
		
	<!-- 페이징 -->
	<select id="totalCnt" resultType="int">
		SELECT count(r.prod_res_no)
		FROM member m , product_reservation r
		WHERE m.mem_no = r.mem_no
	</select>
	 
		

		
<!-- 		Jo -->
		
	 
		
		
<!-- 		Yoon -->
		
		
	 
		
<!-- 		Lee -->
		
	 
	 
	
	
	
</mapper>