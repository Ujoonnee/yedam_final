<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Park -->
<mapper namespace="com.yedam.finalPrj.store.serviceImpl.StoreMapper">
	<resultMap type="com.yedam.finalPrj.store.vo.park.Store"
		id="store">
		<id property="storeNo" column="store_no" />
		<result property="category" column="category" />
		<result property="name" column="name" />
		<result property="storeCat" column="store_cat" />
		<result property="address" column="address" />
		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="tel" column="tel" />
		<result property="thumbnail" column="thumbnail" />
		<result property="approvalStatus" column="approval_status" />
		<result property="applicationDate" column="application_date" />
	</resultMap>
<!-- 서비스 등록 -->
	<insert id="regist"
		parameterType="com.yedam.finalPrj.store.vo.park.Store">
		<selectKey keyProperty="storeNo" resultType="long"
			order="BEFORE">
			Select CASE when max(store_no) is null then 1
			ELSE MAX(store_no)
			+1 END storeNo 
			from store
		</selectKey>
		insert into store values(
		#{storeNo},'00204',#{name},#{storeCat},#{address},
		#{latitude},#{longitude},#{tel},#{thumbnail},#{memNo},'00403',SYSDATE)
	</insert>
<!-- 	멤버 번호로 상점여부 확인 -->
	<select id = "checkStoreNo" resultType="String">
	SELECT S.STORE_NO
	FROM
	STORE S, MEMBER M
	WHERE S.MEM_NO = M.MEM_NO
	AND M.MEM_NO = #{memNo}
	</select>
<!-- 	매장등록신청 전 목록 조회 -->
 	<select id="selectStoreRegList" resultType="com.yedam.finalPrj.store.vo.park.Store" >
 		SELECT * 
		FROM (SELECT a.*,ROWNUM rn
			FROM
				(select s.* , GET_CODE_NAME(s.approval_status)as approvalStatus
					from store s
					order by approval_status desc, application_date desc
				)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn >]]> (#{pageNum}-1) * #{amount}
 	</select>
	<update id = "updateStatus" parameterType="java.util.HashMap">
		UPDATE STORE
		SET approval_Status = #{status} 
		WHERE store_no = #{storeNo}
	</update>
<!--  	매장명 검색 리스트 -->
 	<select id = "searchStoreName" resultType="com.yedam.finalPrj.store.vo.park.Store">
 		SELECT * FROM
			(SELECT a.*, ROWNUM rn from(
	 		SELECT s.* , GET_CODE_NAME(s.approval_status)as approvalStatus
				FROM STORE S
				WHERE NAME LIKE ('%'||#{keyword}||'%')
				<if test="approvalType.equals('')" >
					and APPROVAL_STATUS LIKE ('%'||''||'%')
				</if>
				<if test='approvalType.equals("00401")'>
					and APPROVAL_STATUS LIKE '00401'</if>
				<if test='approvalType.equals("00402")'>
					and APPROVAL_STATUS LIKE '00402'</if>
				<if test='approvalType.equals("00403")'>
					and APPROVAL_STATUS LIKE '00403'</if>
				order by  APPROVAL_STATUS DESC 
				 <if test='applicationDate.equals("1")'>
				, application_date desc </if>
				 <if test='applicationDate.equals("2")'>
				, application_date asc </if>
				)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
 	</select>
<!--  	매장명 검색 시 전체 개수 -->
 	<select id ="totalApprovalStoreNameCnt" resultType="int">
 		select count(*)
		from store 
		where name LIKE ('%'||#{keyword}||'%')
 	</select>
<!--  	사업자명 검색 리스트 -->
 	<select id = "searchPname" resultType="com.yedam.finalPrj.store.vo.park.Store">
	 	SELECT * FROM
			(SELECT a.*, ROWNUM rn from(
		 		SELECT S.*,GET_CODE_NAME(S.APPROVAL_STATUS)AS APPROVALSTATUS
				FROM (
				SELECT S.STORE_NO, S.CATEGORY, S.NAME, S.STORE_CAT, S.ADDRESS,S.TEL,S.THUMBNAIL,S.APPROVAL_STATUS,S.APPLICATION_DATE,
				M.MEM_NO ,M.EMAIL, M.NAME AS MEMNAME , M.BUISNESS_TYPE,M.STATUS,MEM_TYPE 
				FROM STORE S, MEMBER M 
				WHERE S.MEM_NO= M.MEM_NO
				<if test="approvalType.equals('')" >
					and APPROVAL_STATUS LIKE ('%'||''||'%')
				</if>
				<if test='approvalType.equals("00401")'>
					and APPROVAL_STATUS LIKE '00401'</if>
				<if test='approvalType.equals("00402")'>
					and APPROVAL_STATUS LIKE '00402'</if>
				<if test='approvalType.equals("00403")'>
					and APPROVAL_STATUS LIKE '00403'</if>
				order by  APPROVAL_STATUS DESC 
				 <if test='applicationDate.equals("1")'>
				, application_date desc </if>
				 <if test='applicationDate.equals("2")'>
				, application_date asc </if>
				) s
				where memName like  ('%'||#{keyword}||'%')
				)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
 	</select>
<!--  	사업자명 검색 시의 전체 개수 -->
 	<select id ="totalApprovalNameCnt" resultType="int">
 		SELECT COUNT(*)
		FROM STORE S, MEMBER M
		WHERE S.MEM_NO = M.MEM_NO 
        AND M.NAME LIKE ('%'||#{keyword}||'%')
 	</select>
 	
<!-- 매장 리스트 출력-->
	<select id="storeList" 
		resultType="com.yedam.finalPrj.store.vo.park.Store">
		
  		SELECT *
		FROM
		    (SELECT a.*,ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance 
		        from store 
		        order by distance)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(카테고리검색)-->
	<select id="searchaddress" resultType="com.yedam.finalPrj.store.vo.park.Store">
	
		SELECT *
		FROM
		    (SELECT a.*,ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		        from 
		             store 
		             where store_cat LIKE ('%'||#{keyword}||'%')
		             <![CDATA[
		        order by distance)a
		     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(매장이름)-->
	<select id="searchName" resultType="com.yedam.finalPrj.store.vo.park.Store" >
		SELECT *
		FROM
		    (SELECT a.*, ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		        from store 
		        where name LIKE ('%'||#{keyword}||'%')
				<![CDATA[
		        order by distance) a
		     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
		    ) b
		WHERE rn > (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(상품명검색)-->
	<select id="searchProduct" resultType="com.yedam.finalPrj.store.vo.park.Store">
		SELECT *
		FROM
		    (SELECT a.*, ROWNUM rn
		    FROM(
		         select s.store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		         from 
		               (select distinct store_no
		                from product
		                where prod_name LIKE ('%'||#{keyword}||'%')
				             <![CDATA[)p
				             join store s
				             on p.store_no = s.store_no
				        order by distance)a
				     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
				    <![CDATA[ ) b
				WHERE rn >]]> (#{pageNum}-1) * #{amount}
	</select>
	<select id ="searchBlank" resultType = "com.yedam.finalPrj.store.vo.park.Store">
		
		SELECT * FROM
			(SELECT a.*, ROWNUM rn from(
	 		SELECT s.* , GET_CODE_NAME(s.approval_status)as approvalStatus
				FROM STORE S
				 
				<if test="approvalType.equals('')" >
					WHERE APPROVAL_STATUS LIKE ('%'||''||'%')
				</if>
				<if test='approvalType.equals("00401")'>
					WHERE APPROVAL_STATUS LIKE '00401'</if>
				<if test='approvalType.equals("00402")'>
					WHERE APPROVAL_STATUS LIKE '00402'</if>
				<if test='approvalType.equals("00403")'>
					WHERE APPROVAL_STATUS LIKE '00403'</if>
				order by  APPROVAL_STATUS DESC 
				 <if test='applicationDate.equals("1")'>
				, application_date desc </if>
				 <if test='applicationDate.equals("2")'>
				, application_date asc </if>
				)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
	</select>
	<select id ="totalBlankCnt" resultType = "int">
		select count(*)
		from store 
	</select>
	
<!-- 매장 개수 처리  -->
	<select id="totalCnt" resultType="int">
		<![CDATA[
		SELECT count(*)
		FROM store s
		where store_no > 0
		]]>
	</select>
	<!-- 매장명 개수 처리 -->
	<select id ="totalNameCnt" resultType="int">
		select count(*) 
		from store s
		where name like ('%'||#{keyword}||'%')
	    and store_no > 0
	</select>
	<!-- 매장 카테고리 개수 처리 -->
	<select id ="totalCatCnt" resultType="int">
		select count(*) 
		from store s
		where store_cat like ('%'||#{keyword}||'%')
		    and store_no > 0
	</select>
	<!-- 상품명 개수 처리  -->
	<select id ="totalProdCnt" resultType="int">
		select count(*)
		from store s ,product p
		where s.store_no = p.store_no
		and prod_name like ('%'||#{keyword}||'%')
	</select>
	

	
	
		
<!-- 	Hong -->

	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="int">
		DELETE FROM review WHERE rev_no = #{revNo}
	</delete>


<!-- Jo -->
<!-- 예약 상품 목록 출력 -->
<select id = "resProdList"  resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
   SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (
                SELECT * FROM
					(SELECT DISTINCT s.name as "store.name", p.prod_name as "product.prodName",  r.payment_amt, r.pickup_status, r.pickup_time, r.pickup_date, r.prod_res_no,
						RANK()OVER(PARTITION BY r.prod_res_no ORDER BY p.prod_name) AS RANK
					FROM store s, product_reservation r, product p
					WHERE s.store_no = r.store_no AND r.payment_status = 'Y'
					AND s.store_no = p.store_no AND p.status = '00601' AND r.mem_no = #{memNo}
					ORDER BY RANK)
				where ROWNUM <![CDATA[<=]]> (SELECT COUNT(*) FROM reserved_product)
               ) a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>

<!-- 매장이름으로 예약 상품리스트 출력 -->
<select id="selectResProdListByStoreName" resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (select * from(
               	 select * from
					(SELECT DISTINCT s.name as "store.name", p.prod_name as "product.prodName",  r.payment_amt, r.pickup_status , r.pickup_time, r.pickup_date, r.prod_res_no,
						rank()over(partition by r.prod_res_no order by p.prod_name) as rank
							FROM store s, product_reservation r, product p
								WHERE s.store_no = r.store_no AND r.payment_status = 'Y'
							AND s.store_no = p.store_no AND p.status = '00601' AND r.mem_no = #{memNo}
						order by rank)
					where ROWNUM <![CDATA[<=]]> (select count(*) from reserved_product)
               ) where <![CDATA["store.name"]]> like '%'||#{keyword}||'%') a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>
<!-- 상품명으로 예약 상품리스트 출력 -->
<select id="selectResProdListByProdName" resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (SELECT *
					FROM(
						SELECT p.prod_name AS "product.prodName", s.name AS "store.name", r.payment_amt, r.pickup_status, r.pickup_time, r.pickup_date, r.prod_res_no, rank()over(partition by r.prod_res_no order by p.prod_name) as rank
							FROM store s, product_reservation r, product p
								WHERE s.store_no = r.store_no AND r.payment_status = 'Y'
							AND s.store_no = p.store_no AND p.status = '00601' AND r.mem_no = #{memNo}
						AND prod_name like '%'||#{keyword}||'%' 
					ORDER BY rank)
				where rank = 1) a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>



<!-- 예약상품 상세내역 -->
<select id="resProdDetail" parameterType="int" resultType="com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT s.store_no AS "store.storeNo", r.pickup_status, r.payment_amt, r.order_date, r.category, prod_res_no, m.name AS "member.name", r.order_date, s.name AS "store.name", r.pickup_time, r.pickup_date, m.tel AS "member.tel" 
		FROM store s, member m, product_reservation r
			WHERE m.mem_no=r.mem_no
		AND r.store_no = s.store_no 
	AND r.prod_res_no = #{keyword}
</select>
<!-- 예약상품 상세내역(상품목록) -->
<select id="resProdDetailList" parameterType="int" resultType="com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT r.prod_res_no, p.prod_no AS "product.prodNo", p.prod_thumbnail AS "product.prodThumbnail", p.prod_name AS "product.prodName",
            r.count AS "reservedProduct.count",
            p.price AS "product.price"
	FROM product p, reserved_product r
	WHERE r.prod_no = p.prod_no
	AND r.prod_res_no = #{keyword}
 </select>
 
 <!--상품 총 예약 건수 처리  -->
<select id="resTotalCnt" parameterType="int" resultType="int">
	SELECT count(*)
	FROM product_reservation
	WHERE mem_no = #{memNo} AND payment_status = 'Y'
</select>
<!-- 매장이름으로 검색시 나오는 예약 건수 -->
<select id="storeCnt" resultType="int">
  SELECT count(*)
		FROM(
			SELECT p.prod_name AS "product.prodName", s.name AS "store.name", r.payment_amt, r.pickup_status, r.pickup_time, r.prod_res_no,rank()over(partition by r.prod_res_no order by p.prod_name) as rank
				FROM store s, product_reservation r, product p
					WHERE s.store_no = r.store_no AND r.payment_status = 'Y'
				AND s.store_no = p.store_no AND r.mem_no = #{memNo}
			AND s.name like '%'||#{keyword}||'%'
		ORDER BY rank)
	where rank = 1
</select>
<!-- 상품명으로 검색시 나오는 예약건수 -->
<select id="prodNameCnt" resultType="int">
SELECT count(*) 
	FROM(
		SELECT count(*)
			FROM  product_reservation t,  reserved_product r, product p
				WHERE t.prod_res_no = r.prod_res_no 
				AND r.store_no = p.store_no 
				AND t.mem_no = #{memNo}
				AND t.payment_status = 'Y'
				AND p.prod_name like '%'||#{keyword}||'%'
		GROUP BY r.prod_res_no)
</select>
<!-- 예약상세페이지에서 리뷰출력 -->
<select id="reviewLoad" parameterType="int" resultType="com.yedam.finalPrj.review.service.ReviewVO" >
	SELECT * 
	FROM REVIEW r, PRODUCT_RESERVATION pr
	WHERE r.res_no = pr.prod_res_no
	AND r.category = '00204'
	AND r.res_no = #{selectedResNo}
</select>
<!-- product_reservation 테이블에서 결제상태 'N'으로 수정(상품예약번호) --> 
<update id="CancelRes" parameterType="int">
	UPDATE product_reservation 
	SET payment_status = 'N' 
	WHERE prod_res_no = #{prodResNo}
</update>

<!-- reserved_product테이블에서 취소된만큼 product테이블에서 재고수량 증가  -->
<update id="CancelRes2" parameterType="map" >
	    UPDATE product p SET p.stock = (select NVL( MAX(p.stock) , 0) FROM product) + (SELECT rp.count 
	    																				 FROM reserved_product rp
		                                                                                WHERE rp.store_no= #{storeNo} AND rp.prod_no = #{prodNo})    
		WHERE p.store_no= #{storeNo} 
		  AND p.prod_no = #{prodNo}
</update>
<!-- 	Yoon -->
	
	
	
<!-- 	Lee -->
	
	
	
	
	
</mapper>