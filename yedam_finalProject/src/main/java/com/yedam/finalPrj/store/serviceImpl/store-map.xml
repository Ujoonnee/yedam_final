<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Park -->
<mapper namespace="com.yedam.finalPrj.store.serviceImpl.StoreMapper">
	<resultMap type="com.yedam.finalPrj.store.vo.park.Store"
		id="store">
		<id property="storeNo" column="store_no" />
		<result property="category" column="category" />
		<result property="name" column="name" />
		<result property="storeCat" column="store_cat" />
		<result property="address" column="address" />
		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="tel" column="tel" />
		<result property="thumbnail" column="thumbnail" />
	</resultMap>
<!-- 서비스 등록 -->
	<insert id="regist"
		parameterType="com.yedam.finalPrj.store.vo.park.Store">
		<selectKey keyProperty="storeNo" resultType="long"
			order="BEFORE">
			Select CASE when max(store_no) is null then 1
			ELSE MAX(store_no)
			+1 END storeNo 
			from store
		</selectKey>
		insert into store values(
		#{storeNo},'00204',#{name},#{storeCat},#{address},
		#{latitude},#{longitude},#{tel},#{thumbnail},#{memNo})
	</insert>
<!-- 매장 리스트 출력-->
	<select id="storeList" 
		resultType="com.yedam.finalPrj.store.vo.park.Store">
		
  		SELECT *
		FROM
		    (SELECT a.*,ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance 
		        from store 
		        order by distance)a
		     WHERE ROWNUM<![CDATA[ <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(카테고리검색)-->
	<select id="searchaddress" resultType="com.yedam.finalPrj.store.vo.park.Store">
	
		SELECT *
		FROM
		    (SELECT a.*,ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		        from 
		             store 
		             where store_cat LIKE ('%'||#{keyword}||'%')
		             <![CDATA[
		        order by distance)a
		     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
		    <![CDATA[) b
		WHERE rn>]]> (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(매장이름)-->
	<select id="searchName" resultType="com.yedam.finalPrj.store.vo.park.Store" >
		SELECT *
		FROM
		    (SELECT a.*, ROWNUM rn
		    FROM(
		        select store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		        from store 
		        where name LIKE ('%'||#{keyword}||'%')
				<![CDATA[
		        order by distance) a
		     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
		    ) b
		WHERE rn > (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 리스트 출력(상품명검색)-->
	<select id="searchProduct" resultType="com.yedam.finalPrj.store.vo.park.Store">
		SELECT *
		FROM
		    (SELECT a.*, ROWNUM rn
		    FROM(
		         select s.store_no, name, address, thumbnail, get_distance(latitude, longitude, #{latitude}, #{longitude}) distance
		         from 
		               (select distinct store_no
		                from product
		                where prod_name LIKE ('%'||#{keyword}||'%')
				             <![CDATA[)p
				             join store s
				             on p.store_no = s.store_no
				        order by distance)a
				     WHERE ROWNUM <= ]]>#{pageNum} * #{amount}
				    <![CDATA[ ) b
				WHERE rn >]]> (#{pageNum}-1) * #{amount}
	</select>
<!-- 매장 개수 처리  -->
	<select id="totalCnt" resultType="int">
		<![CDATA[
		SELECT count(*)
		FROM store s
		where store_no > 0
		]]>
	</select>
	<!-- 매장명 개수 처리 -->
	<select id ="totalNameCnt" resultType="int">
		select count(*) 
		from store s
		where name like ('%'||#{keyword}||'%')
	    and store_no > 0
	</select>
	<!-- 매장 카테고리 개수 처리 -->
	<select id ="totalCatCnt" resultType="int">
		select count(*) 
		from store s
		where store_cat like ('%'||#{keyword}||'%')
		    and store_no > 0
	</select>
	<!-- 상품명 개수 처리  -->
	<select id ="totalProdCnt" resultType="int">
		select count(*)
		from store s ,product p
		where s.store_no = p.store_no
		and prod_name like ('%'||#{keyword}||'%')
	</select>
	

	
	
		
<!-- 	Hong -->

<!-- Jo -->
<!-- 예약 상품 목록 출력 -->
<select id = "resProdList"  resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
   SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (
                SELECT * FROM
					(SELECT DISTINCT s.name as "store.name", p.prod_name as "product.prodName",  r.payment_amt, r.pickup_status, r.pickup_time, r.pickup_date, r.prod_res_no,
						RANK()OVER(PARTITION BY r.prod_res_no ORDER BY p.prod_name) AS RANK
					FROM store s, product_reservation r, product p
					WHERE s.store_no = r.store_no
					AND s.store_no = p.store_no AND r.mem_no = #{memNo}
					ORDER BY RANK)
				where ROWNUM <![CDATA[<=]]> (SELECT COUNT(*) FROM reserved_product)
               ) a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>

<!-- 매장이름으로 예약 상품리스트 출력 -->
<select id="selectResProdListByStoreName" resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (select * from(
               	 select * from
					(SELECT DISTINCT s.name as "store.name", p.prod_name as "product.prodName",  r.payment_amt, r.pickup_status , r.pickup_time, r.pickup_date, r.prod_res_no,
						rank()over(partition by r.prod_res_no order by p.prod_name) as rank
							FROM store s, product_reservation r, product p
								WHERE s.store_no = r.store_no
							AND s.store_no = p.store_no AND r.mem_no = #{memNo}
						order by rank)
					where ROWNUM <![CDATA[<=]]> (select count(*) from reserved_product)
               ) where <![CDATA["store.name"]]> like '%'||#{keyword}||'%') a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>
<!-- 상품명으로 예약 상품리스트 출력 -->
<select id="selectResProdListByProdName" resultType = "com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT *
   FROM
       (SELECT a.* , ROWNUM rn
           FROM
               (SELECT *
					FROM(
						SELECT p.prod_name AS "product.prodName", s.name AS "store.name", r.payment_amt, r.pickup_status, r.pickup_time, r.prod_res_no, rank()over(partition by r.prod_res_no order by p.prod_name) as rank
							FROM store s, product_reservation r, product p
								WHERE s.store_no = r.store_no
							AND s.store_no = p.store_no AND r.mem_no = #{memNo}
						AND prod_name like '%'||#{keyword}||'%' 
					ORDER BY rank)
				where rank = 1) a
           WHERE ROWNUM <![CDATA[<=]]> #{pageNum} * #{amount}
       ) b
   WHERE rn <![CDATA[>]]> (#{pageNum}-1) * #{amount}
</select>



<!-- 예약상품 상세내역 -->
<select id="resProdDetail" parameterType="int" resultType="com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT r.payment_amt, r.order_date, r.category, prod_res_no, m.name AS "member.name", r.order_date, s.name AS "store.name", r.pickup_time, r.pickup_date, m.tel AS "member.tel" 
		FROM store s, member m, product_reservation r
			WHERE m.mem_no=r.mem_no
		AND r.store_no = s.store_no 
	AND r.prod_res_no = #{keyword}
</select>
<!-- 예약상품 상세내역(상품목록) -->
<select id="resProdDetailList" parameterType="int" resultType="com.yedam.finalPrj.store.vo.jo.ProductReservationVO">
	SELECT r.prod_res_no, p.prod_name AS "product.prodName",
            r.count AS "reservedProduct.count",
            p.price AS "product.price"
	FROM product p, reserved_product r
	WHERE r.prod_no = p.prod_no
	AND r.prod_res_no = #{keyword}
 </select>
 
 <!--상품 총 예약 건수 처리  -->
<select id="resTotalCnt" parameterType="int" resultType="int">
	SELECT count(*)
	FROM product_reservation
	WHERE mem_no = #{memNo}
</select>
<!-- 매장이름으로 검색시 나오는 예약 건수 -->
<select id="storeCnt" resultType="int">
  SELECT count(*)
		FROM(
			SELECT p.prod_name AS "product.prodName", s.name AS "store.name", r.payment_amt, r.pickup_status, r.pickup_time, r.prod_res_no,rank()over(partition by r.prod_res_no order by p.prod_name) as rank
				FROM store s, product_reservation r, product p
					WHERE s.store_no = r.store_no
				AND s.store_no = p.store_no AND r.mem_no = #{memNo}
			AND s.name like '%'||#{keyword}||'%'
		ORDER BY rank)
	where rank = 1
</select>
<!-- 상품명으로 검색시 나오는 예약건수 -->
<select id="prodNameCnt" resultType="int">
SELECT count(*) 
	FROM(
		SELECT count(*)
			FROM  product_reservation t,  reserved_product r, product p
				WHERE t.prod_res_no = r.prod_res_no 
				AND r.store_no = p.store_no 
				AND t.mem_no = #{memNo}
				AND p.prod_name like '%'||#{keyword}||'%'
		GROUP BY r.prod_res_no)
</select>
<!-- <select id="reviewLoad" resultType="com.yedam.finalPrj.review.service.ReviewVO">
SELECT * 
FROM review
WHERE res_no = #{selectedResNo}
</select> -->
<select id="reviewLoad" parameterType="int" resultType="com.yedam.finalPrj.review.service.ReviewVO" >
	SELECT * FROM REVIEW r, PRODUCT_RESERVATION pr
	WHERE r.res_no = pr.prod_res_no
	AND pr.prod_res_no = #{resNo}
</select>

	
<!-- 	Yoon -->
	
	
	
<!-- 	Lee -->
	
	
	
	
	
</mapper>